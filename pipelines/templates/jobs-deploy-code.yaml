parameters:
  subscriptionName:
  environmentName:
  environmentCategory:
  applicationCode:
  applicationShortCode:
  imageTag:
  azureDevOpsProjectId:
  testPipelineId:
  runVersion:
  testPipelineRunId:

jobs:
  - template: get-approval.yaml
    parameters:
      environmentName: ${{parameters.environmentName}}

  - job: deployFunctions
    displayName: Deploy functions
    pool:
      vmImage: windows-latest
    variables:
      functionsArtifactName: functionsFiles
    strategy:
      matrix:
        app-configuration:
          functionName: app-configuration
          appNamePartial: appconfigfuncapp
          appName: ${{parameters.applicationCode}}-$(appNamePartial)-${{parameters.environmentCategory}}
        messaging:
          functionName: messaging
          appNamePartial: devicetwinfuncapp
          appName: ${{parameters.applicationCode}}-$(appNamePartial)-${{parameters.environmentCategory}}
        rule-actions:
          functionName: rule-actions
          appNamePartial: alertingactionsfuncapp
          appName: ${{parameters.applicationCode}}-$(appNamePartial)-${{parameters.environmentCategory}}

    steps:
      - checkout: self
        displayName: Checkout repository

      - task: DownloadPipelineArtifact@2
        displayName: Download artifacts
        inputs:
          source: specific
          project: ${{parameters.azureDevOpsProjectId}}
          pipeline: ${{parameters.testPipelineId}}
          preferTriggeringPipeline: true
          runVersion: ${{parameters.runVersion}}
          runId: ${{parameters.testPipelineRunId}}
          artifact: $(functionsArtifactName)
          path: $(Build.SourcesDirectory)\$(functionsArtifactName)
          allowPartiallySucceededBuilds: true
          allowFailedBuilds: true

      # - script: |-
      #     tree /f /a $(Agent.BuildDirectory)
      #   displayName: List Agent build directory contents

      - task: ArchiveFiles@2
        displayName: Archive files
        inputs:
          rootFolderOrFile: $(Build.SourcesDirectory)/$(functionsArtifactName)/src/functions/$(functionName)/bin/Release/netcoreapp3.1/linux-musl-x64/publish/
          includeRootFolder: false
          archiveFile: $(Build.SourcesDirectory)/$(functionName).zip

      - task: AzureRmWebAppDeployment@3
        displayName: Deploy function
        inputs:
          azureSubscription: ${{parameters.subscriptionName}}
          appType: functionApp
          WebAppName: $(appName)
          DeployToSlotFlag: false
          Package: $(Build.SourcesDirectory)/$(functionName).zip
          TakeAppOfflineFlag: true
          UseWebDeploy: true
          AdditionalArguments: -useChecksum
          RenameFilesFlag: true

  - job: deployServices
    displayName: Deploy services
    variables:
      - template: variables-all.yaml
      - name: aksName
        value: ${{parameters.applicationCode}}-$(aksPartialName)-${{parameters.environmentCategory}}
      - name: resourceGroupName
        value: $(resourceGroupPartialName)-iot-${{parameters.applicationShortCode}}-${{parameters.environmentCategory}}
    strategy:
      matrix:
        asa-manager:
          serviceName: asa-manager
          servicePort: 80
          serviceProbesEnabled: true
        config:
          serviceName: config
          servicePort: 80
          serviceProbesEnabled: true
        device-telemetry:
          serviceName: device-telemetry
          servicePort: 80
          serviceProbesEnabled: true
        diagnostics:
          serviceName: diagnostics
          servicePort: 80
          serviceProbesEnabled: true
        identity-gateway:
          serviceName: identity-gateway
          servicePort: 80
          serviceProbesEnabled: true
        iothub-manager:
          serviceName: iothub-manager
          servicePort: 80
          serviceProbesEnabled: true
        storage-adapter:
          serviceName: storage-adapter
          servicePort: 80
          serviceProbesEnabled: true
        tenant-manager:
          serviceName: tenant-manager
          servicePort: 80
          serviceProbesEnabled: true
        webui:
          serviceName: webui
          servicePort: 10080
          serviceProbesEnabled: false
        reverse-proxy:
          serviceName: reverse-proxy
          servicePort: 10080
          serviceProbesEnabled: false
    steps:
      - template: print-pipeline-resource-variables.yaml
        parameters:
          pipelineResourceName: infra

      - script: |-
          echo "subscriptionName: ${{parameters.subscriptionName}}"
          echo "environmentName: ${{parameters.environmentName}}"
          echo "environmentCategory: ${{parameters.environmentCategory}}"
          echo "applicationCode: ${{parameters.applicationCode}}"
          echo "aksPartialName: ${{parameters.aksPartialName}}"
          echo "resourceGroupPartialName: ${{parameters.resourceGroupPartialName}}"
          echo "aksName: $(aksName)"
          echo "resourceGroupName: $(resourceGroupName)"
          echo "helmVersion: $(helmVersion)"
          echo "serviceName: $(serviceName)"
          echo "servicePort: $(servicePort)"
          echo "serviceProbesEnabled: $(serviceProbesEnabled)"
        displayName: Print job variables

      - template: steps-deploy-individual-service.yaml
        parameters:
          aksName: $(aksName)
          resourceGroupName: $(resourceGroupName)
          subscriptionName: ${{parameters.subscriptionName}}
          serviceName: $(serviceName)
          servicePort: $(servicePort)
          serviceProbesEnabled: $(serviceProbesEnabled)
          helmVersion: $(helmVersion)
          imageTag: ${{parameters.imageTag}}
